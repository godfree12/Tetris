public class Plateau {
    public int longueur;
    public int largeur;
    public int[][] etatplateau;

    public Plateau(int longueur, int largeur) {
        this.longueur = longueur;
        this.largeur = largeur;
        this.etatplateau = new int[longueur][largeur];
        initialiser();
    }
    // permet de remettre a zero l'etat du plateau
    public void initialiser() {
        for (int i = 0; i < etatplateau.length; i++) {
            for (int j = 0; j < etatplateau[i].length; j++) {
                etatplateau[i][j] = 0;
            }
        }
    }
    // cette methode me permet de verifier la possiblité d'ffectuer un deplacement
    public boolean peutDeplacer() {
        // Vérifie si la pièce peut être déplacée vers le bas
        for (int i = etatplateau.length - 1; i >= 0; i--) {
            for (int j = 0; j < etatplateau[i].length; j++) {
                if (etatplateau[i][j] == 1) {
                    // Si la pièce est sur la dernière ligne ou en dessous d'une autre pièce, ne peut pas se déplacer
                    if (i == etatplateau.length - 1 || etatplateau[i + 1][j] == 1) {
                        return false;
                    }
                }
            }
        }
        return true;
    }

    public void deplacement() {
        // verification
        if (peutDeplacer()) {
            // Déplacer la pièce vers le bas
            for (int i = etatplateau.length - 1; i >= 0; i--) {
                for (int j = 0; j < etatplateau[i].length; j++) {
                    if (etatplateau[i][j] == 1) {
                        // Effacer la pièce actuelle du plateau
                        etatplateau[i][j] = 0;

                        // Déplacer la pièce vers le bas
                        etatplateau[i + 1][j] = 1;
                    }
                }
            }
        } else {
            // La pièce ne peut pas être déplacée vers le bas, donc peut-être terminer le jeu, générer une nouvelle pièce, etc.
            // Vous devrez ajouter la logique appropriée ici en fonction des règles de votre jeu Tetris.
        }
    }
    
    public void supprimerLigne() {
        for (int i = etatplateau.length - 1; i >= 0; i--) {
            boolean ligneComplete = true;

            for (int j = 0; j < etatplateau[i].length; j++) {
            	// cette condtion permet de verifier si toute la ligne est agee a 1 ou pas
                if (etatplateau[i][j] != 1) {
                    ligneComplete = false;
                    break;  // Sortir de la boucle si au moins une case n'est pas égale à 1
                    
                }
            }

            if (ligneComplete) {
                // Supprimer la ligne en la remplaçant par la ligne du dessus (s'il en existe une)
                for (int k = i; k > 0; k--) {
                    for (int l = 0; l < etatplateau[k].length; l++) {
                        etatplateau[k][l] = etatplateau[k - 1][l];
                    }
                }
                // Remettre à zéro la première ligne
                for (int l = 0; l < etatplateau[0].length; l++) {
                    etatplateau[0][l] = 0;
                }
                
            }
        }
    }
}
